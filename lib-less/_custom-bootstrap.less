/* Imports Bootstrap from vendor dir and overrides variables with the
   Esper look and feel */
@import "../node_modules/bootstrap/less/bootstrap";

// Override variables
@import "./_bootstrap-variables";

/*
  Button tweaks
*/

.btn-tertiary {
  color: rgba(255, 255, 255, 0.8);
  background: transparent;
  border: 1px solid rgba(255, 255, 255, 0.8);
  transition: color 0.5s, border 0.5s;

  &:hover, &:active {
    color: white;
    border: 1px solid white;
  }

  &.active {
    color: @brand-text;
    background: rgba(255, 255, 255, 0.95);
  }
}

.btn {
  transition: color 0.5s, border 0.5s, background-color 0.5s, transform 0.5s;
}

.btn, .btn:focus {
  outline: none;
  box-shadow: @default-box-shadow;
}

.btn:active, .btn.active,
.btn:active:hover, .btn:active:focus, .btn.active:focus {
  outline: none;
  box-shadow: none;
}

.btn:hover:enabled {
  outline: none;
  box-shadow: @plus-box-shadow;
  transform: translateY(-1px);
}

.btn-primary {
  font-weight: bold;
}

.btn-group .btn, .btn-group.btn.active, .btn-group.btn:active,
.input-group .btn, .input-group.btn.active, .input-group.btn:active,
.input-group-btn > .btn:hover,
.input-group-btn > .btn:focus,
.input-group-btn > .btn:active,
.input-group-btn:last-child > .btn {
  z-index: @zindex-button; // So border changes stand out
  box-shadow: none;

  &:hover, &:focus {
    z-index: @zindex-hover;
    transform: none;
  }
}

// Fix double-border using flexbox
.btn-group-justified {
  display: flex;

  > .btn-group, > .btn {
    flex-grow: 1;
  }
}

// .btn-default behaves a little differently in terms of colorgh
.btn-default {
  &:hover, &:focus, &:active,
  &:active:hover, &:active:focus {
    border-color: @link-color;
    color: @link-color;
    background: @btn-default-bg;
  }

  &:active:hover, &:active:focus {
    background: fade(@link-color, 10%);
  }

  // This is a little absurd, but :active and .active do different things
  &.active, &.active:active, &.active:focus, &.active:hover,
  &.active:active:hover, &.active:active:focus {
    color: @brand-contrast;
    background: @link-color;
    border-color: @link-color;
  }
}

// Modify LESS's default button settings for various classes
.esper-button-variant(@color; @background; @border) {
  background-color: transparent; // Fallback;
  background-color: @background;

  &:focus,
  &.focus {
    background-color: lighten(@background, 10%);
        border-color: lighten(@border, 25%);
  }
  &:hover:enabled {
               color: @brand-contrast;
    background-color: @border;
        border-color: @border;
  }
  &:active,
  &.active,
  .open > .dropdown-toggle & {
               color: @brand-contrast;
    background-color: @border;
        border-color: @border;

    &:hover,
    &:focus,
    &.focus {
               color: @brand-contrast;
    background-color: lighten(@border, 12%);
        border-color: lighten(@border, 12%);
    }
  }
}

.btn-primary {
  .esper-button-variant(
    @btn-primary-color,
    @btn-primary-bg,
    @btn-primary-border
  )
}

.btn-success {
  .esper-button-variant(
    @btn-success-color,
    @btn-success-bg,
    @btn-success-border
  )
}

.btn-info {
  .esper-button-variant(
    @btn-info-color,
    @btn-info-bg,
    @btn-info-border
  )
}

.btn-warning {
  .esper-button-variant(
    @btn-warning-color,
    @btn-warning-bg,
    @btn-warning-border
  )
}

// Leave .btn-danger along for now

// Aliases
.left { .pull-left; }
.right { .pull-right; }


/*
  Global, generics
*/

body {
  text-rendering: optimizeLegibility;
  font-smoothing: antialiased;
}

label {
  color: @brand-text-header;
  text-transform: capitalize;
}

a.text-muted {
  color: @text-muted;

  &:hover, &:focus {
    color: @text-muted-hover;
  }
}


/*
  Misc tweaks to Bootstrap classes that don't normally make sense otherwise
  (or for stylistic reasons)
*/

input.form-control, textarea.form-control, select.form-control {
  &:focus, &:hover, &:active, &.active,
  &:active:hover, &:active:focus {
    outline: none;
    border: 1px solid @link-color;
    box-shadow: none;
    z-index: 10;
  }

  .input-group & {
    z-index: @zindex-input;
    &:hover, &:focus { z-index: @zindex-hover; }
  }
}


////

.list-group-item.one-line {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow-x: hidden;

  // This helps floated badges behave more nicely with an accompanying label
  label {
    display: block;
    text-overflow: ellipsis;
    overflow-x: hidden;
  }
}

.list-group-item-success,
.list-group-item-info,
.list-group-item-warning,
.list-group-item-danger, {
  z-index: 1;
}

.list-group-item-success {
  border: 1px solid @state-success-border;
}

.list-group-item-info {
  border: 1px solid @state-info-border;
}

.list-group-item-warning {
  border: 1px solid @state-warning-border;
}

.list-group-item-danger {
  border: 1px solid @state-danger-border;
}

.list-group.compact {
  margin-bottom: 0;

  .list-group-item {
    padding: @padding-small-horizontal;
    border-left: 0;
    border-right: 0;

    &:first-child {
      border-top: 0;
    }

    &:last-child {
      border-bottom: 0;
    }
  }
}

a {
  cursor: pointer; // No href required

  &.active {
    cursor: default;
  }
}

.alert {

  &.compact {
    margin-bottom: @alert-padding;
  }

  &.alert-bottom {
    margin-top: @alert-padding;
  }
}


/////

.navbar-fixed-top .navbar { border-radius: 0; }

.navbar {
  margin-bottom: 0;
  max-height: @navbar-height;
  overflow: hidden;
}

.navbar .container-fluid {
  padding-left: @grid-gutter-width / 2;
  padding-right: @grid-gutter-width / 2;

  @media (min-width: @screen-sm-min) {
    padding-left: @padding-base-horizontal;
    padding-right: @padding-base-horizontal;

    .navbar-right {
      margin-right: 0;
    }

    .navbar-brand {
      margin-left: 0;
    }
  }
}

@media screen and (max-width: @screen-xs-max) {
  .navbar .navbar-header {
    display: flex;

    > div, > span {
      flex-grow: 1;
      text-align: center;

      &:first-child {
        text-align: left;
      }

      &:last-child {
        text-align: right;
      }
    }

    .navbar-brand {
      float: none;
      display: inline-block;
    }
  }
}

.navbar-brand {
  line-height: @navbar-height - (@navbar-padding-vertical * 2);
  vertical-align: middle;

  img {
    height: @navbar-height - (@navbar-padding-vertical * 2);
    width: auto;
    margin: 0 auto;
  }

  &.lg {
    line-height: @navbar-height - (@navbar-padding-vertical * 4/3);
    padding-top: @navbar-padding-vertical * 2/3;
    padding-bottom: @navbar-padding-vertical * 2/3;

    img {
      height: @navbar-height - (@navbar-padding-vertical * 4/3);
    }
  }
}

.nav > li > a:hover, .nav > li > a:focus {
  background-color: rgba(255, 255, 255, 0.8);
  color: rgba(0, 0, 0, 0.8);
}

.navbar-default {
  background: transparent;
  .container-fluid {
    background: @navbar-default-bg;
  }
}

.navbar-inverse {
  background: transparent;
  .container-fluid {
    background: @navbar-inverse-bg;
  }
}

.navbar-default .btn-default.navbar-btn {
  border-color: @navbar-default-border;
  color: @navbar-default-border;

  &:hover, &:focus {
    background: @navbar-default-border;
    color: white;
  }
}

.navbar-toggle {
  padding: @padding-base-vertical @padding-base-horizontal;
  margin-left: @padding-base-horizontal;
  margin-right: @padding-base-horizontal;
}


////

.progress.skinny {
  height: 3px;
  border-radius: 0;
  margin: 0;
}


/* FontAwesome Tweaks */

.navbar-nav > li > a > .fa,
.btn .fa {
  line-height: @line-height-computed;
}

.fa.bs-height {
  line-height: @line-height-computed;
}


////

.list-group {
  margin-bottom: @padding-large-vertical;
  border-radius: @border-radius-base;
  box-shadow: @default-box-shadow;

  .panel-body &, .modal-body & {
    box-shadow: none;
  }

  &:last-child {
    margin-bottom: 0;
  }
}


////

.modal-header .close-action {
  line-height: @modal-title-line-height;
  vertical-align: middle;

  .fa {
    font-size: @font-size-base;
  }
}

.modal-footer {
  .modal-body & {
    margin-left: -@modal-inner-padding;
    margin-right: -@modal-inner-padding;
    padding: @modal-inner-padding @modal-inner-padding 0;
  }

  .panel-body & {
    margin-left: -@panel-body-padding;
    margin-right: -@panel-body-padding;
    padding: @panel-body-padding @panel-body-padding 0;
  }
}

.modal-body .alert {
  margin-bottom: @modal-inner-padding;
}

.panel-body .alert {
  margin-bottom: @panel-body-padding;
}

.modal-header, .panel-heading {
  text-transform: capitalize;
  color: @shade-text;

  h1, h2, h3, h4, h4, h6 { color: @shade-text-header; }
}

.panel {
  box-shadow: @default-box-shadow;
  margin-bottom: @panel-margin-bottom;
}

.modal-body, .panel-body {
  .alert:last-child {
    margin-bottom: 0;
  }
}


//////

.dropdown {
  .dropdown-menu {
    padding: (@line-height-computed / 2) 0;
    width: 100%;
    max-width: 400px;

    > li > a {
      &:hover, &:focus {
        opacity: 1.0;
      }
    }
  }
}

input.form-control.dropdown-toggle[readonly], .dropdown-toggle {
  background: @input-bg;
  float: none;
  cursor: pointer;
}


/* Fix corner rounding with nested inputs */

.input-group {
  > div:not(:first-child) {
    .form-control {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }

  > div:first-child {
    .form-control:first-child, .form-control.start-of-group {
      border-top-left-radius: @input-border-radius;
      border-bottom-left-radius: @input-border-radius;

      &.input-sm {
        border-top-left-radius: @input-border-radius-small;
        border-bottom-left-radius: @input-border-radius-small;
      }

      &.input-lg {
        border-top-left-radius: @input-border-radius-large;
        border-bottom-left-radius: @input-border-radius-large;
      }
    }
  }

  > div:last-child {
    .form-control:last-child, .form-control.end-of-group {
      border-top-right-radius: @input-border-radius;
      border-bottom-right-radius: @input-border-radius;

      &.input-sm {
        border-top-right-radius: @input-border-radius-small;
        border-bottom-right-radius: @input-border-radius-small;
      }

      &.input-lg {
        border-top-right-radius: @input-border-radius-large;
        border-bottom-right-radius: @input-border-radius-large;
      }
    }
  }
}


/* Navbar styling for mobile */

@media (max-width: @screen-xs-max) {
  .navbar-collapse, .esper-collapse {
    .navbar-nav + .navbar-nav {
      padding-top: (@navbar-padding-vertical / 2);
      border-top: 1px solid @dropdown-divider-bg;
    }

    .padded & {
      .navbar-nav {
        padding-left: @padding-base-horizontal;
        padding-right: @padding-base-horizontal;
      }
    }
  }
}

.navbar-default .navbar-toggle {
  border: 0;
  color: @navbar-default-link-color;
  cursor: pointer;

  &:hover, &:focus {
    background-color: transparent;
    color: @navbar-default-link-hover-color;
  }
}

.alert a {
  font-weight: bold;
}

.alert-success a {
  color: @brand-success;
  &:hover { color: @brand-success; }
}

.alert-info a {
  color: @brand-info;
  &:hover { color: @brand-info; }
}

.alert-warning a {
  color: @brand-warning;
  &:hover { color: @brand-warning; }
}

.alert-danger a {
  color: @brand-danger;
  &:hover { color: @brand-danger; }
}


/* Form tweaks */

.form-horizontal .control-label.long {
  text-align: left;
}

.form-group:last-child {
  margin-bottom: 0;
}


/*
  Modal tweaks to be full-screen on mobile and not scroll as much on desktop
*/

.modal {
  padding: 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: auto;

  .modal-dialog {
    display: flex;
    flex-direction: column;
    overflow: auto;

    /*
      NB: Nested flex lets both .modal-content and .modal-dialog expand
      to maximum intended height. If flexbox is unavailable, that's fine
      since overflow: auto will just scroll the whole thing.
    */
    .modal-content {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
      flex-shrink: 1;
      overflow: auto;

      > div {
        flex-grow: 0;
        flex-shrink: 0;
      }

      > .modal-body {
        flex-grow: 1;
        flex-shrink: 1;
        overflow: auto;
      }
    }
  }
}

@media screen and (max-width: @screen-xs-max) {
  .modal .modal-dialog {
    margin: 0;
    height: 100%;

    .modal-content {
      border-radius: 0;
      border: 0;
      height: 100%;
    }
  }
}

/*
  Center modal using translation rather than margin since we're absolute
  positioning above
*/
@media screen and (min-width: @screen-sm-min) {
  .modal .modal-dialog {
    margin: @modal-margin auto 0;

    /*
      Ideally, we'd like to define everything with percentages but vertical
      margin and percentages doesn't really work because the CSS spec oddly
      defines that margin percentages always be calculated as a percentage
      of horizontal width, even for vertical margin.
    */
    max-height: calc(~"100% - "@modal-margin * 2);
  }
}

// Not really Bootstrap, but don't let Intercom clobber modals, dropdowns, etc.
#intercom-container {
  z-index: @zindex-navbar-fixed + 1;
}
